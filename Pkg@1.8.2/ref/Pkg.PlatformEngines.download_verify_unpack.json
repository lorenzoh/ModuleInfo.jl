{"attributes":{"kind":"function","backlinks":[],"methods":[{"symbol_id":"Pkg.PlatformEngines.download_verify_unpack","module_id":"Pkg.PlatformEngines","file":"PlatformEngines.jl","line":441,"signature":"(::Signature)"}],"package_id":"Pkg@1.8.2","title":"download_verify_unpack","symbol_id":"Pkg.PlatformEngines.download_verify_unpack","exported":true,"module_id":"Pkg.PlatformEngines"},"tag":"documentation","children":[{"attributes":{"symbol":"Pkg.PlatformEngines.download_verify_unpack","line":405,"module":"Pkg.PlatformEngines","file":"PlatformEngines.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["download_verify_unpack(\n    url::AbstractString,\n    hash::Union{AbstractString, Nothing},\n    dest::AbstractString;\n    tarball_path = nothing,\n    ignore_existence::Bool = false,\n    force::Bool = false,\n    verbose::Bool = false,\n    quiet_download::Bool = false,\n    io::IO=stderr,\n)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Helper method to download tarball located at ",{"attributes":{},"tag":"code","children":["url"],"type":"node"},", verify it matches the given ",{"attributes":{},"tag":"code","children":["hash"],"type":"node"},", then unpack it into folder ",{"attributes":{},"tag":"code","children":["dest"],"type":"node"},".  In general, the method ",{"attributes":{},"tag":"code","children":["install()"],"type":"node"}," should be used to download and install tarballs into a ",{"attributes":{},"tag":"code","children":["Prefix"],"type":"node"},"; this method should only be used if the extra functionality of ",{"attributes":{},"tag":"code","children":["install()"],"type":"node"}," is undesired."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["tarball_path"],"type":"node"}," is specified, the given ",{"attributes":{},"tag":"code","children":["url"],"type":"node"}," will be downloaded to ",{"attributes":{},"tag":"code","children":["tarball_path"],"type":"node"},", and it will not be removed after downloading and verification is complete.  If it is not specified, the tarball will be downloaded to a temporary location, and removed after verification is complete."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["force"],"type":"node"}," is specified, a verification failure will cause ",{"attributes":{},"tag":"code","children":["tarball_path"],"type":"node"}," to be deleted (if it exists), the ",{"attributes":{},"tag":"code","children":["dest"],"type":"node"}," folder to be removed (if it exists) and the tarball to be redownloaded and reverified.  If the verification check is failed a second time, an exception is raised.  If ",{"attributes":{},"tag":"code","children":["force"],"type":"node"}," is not specified, a verification failure will result in an immediate raised exception."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["ignore_existence"],"type":"node"}," is set, the tarball is unpacked even if the destination directory already exists."],"type":"node"},{"attributes":{},"tag":"p","children":["Returns ",{"attributes":{},"tag":"code","children":["true"],"type":"node"}," if a tarball was actually unpacked, ",{"attributes":{},"tag":"code","children":["false"],"type":"node"}," if nothing was changed in the destination prefix."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}