{"attributes":{"kind":"function","backlinks":[],"methods":[{"symbol_id":"Pkg.BinaryPlatforms.platform_key_abi","module_id":"Pkg.BinaryPlatforms","file":"BinaryPlatforms_compat.jl","line":118,"signature":"(::Signature)"},{"symbol_id":"Pkg.BinaryPlatforms.platform_key_abi","module_id":"Pkg.BinaryPlatforms","file":"BinaryPlatforms_compat.jl","line":119,"signature":"(::Signature)"}],"package_id":"Pkg@1.8.2","title":"platform_key_abi","symbol_id":"Pkg.BinaryPlatforms.platform_key_abi","exported":true,"module_id":"Pkg.BinaryPlatforms"},"tag":"documentation","children":[{"attributes":{"symbol":"Pkg.BinaryPlatforms.platform_key_abi","line":108,"module":"Pkg.BinaryPlatforms","file":"BinaryPlatforms_compat.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["platform_key_abi(machine::AbstractString)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Returns the platform key for the current platform, or any other though the the use of the ",{"attributes":{},"tag":"code","children":["machine"],"type":"node"}," parameter."],"type":"node"},{"attributes":{},"tag":"p","children":["This method is deprecated, import ",{"attributes":{},"tag":"code","children":["Base.BinaryPlatforms"],"type":"node"}," and use either ",{"attributes":{},"tag":"code","children":["HostPlatform()"],"type":"node"}," to get the current host platform, or ",{"attributes":{},"tag":"code","children":["parse(Base.BinaryPlatforms.Platform, triplet)"],"type":"node"}," to parse the triplet for some other platform instead."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}