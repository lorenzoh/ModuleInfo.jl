{"attributes":{"kind":"function","backlinks":[],"methods":[{"symbol_id":"Pkg.PlatformEngines.download_verify","module_id":"Pkg.PlatformEngines","file":"PlatformEngines.jl","line":318,"signature":"(::Signature)"}],"package_id":"Pkg@1.8.2","title":"download_verify","symbol_id":"Pkg.PlatformEngines.download_verify","exported":false,"module_id":"Pkg.PlatformEngines"},"tag":"documentation","children":[{"attributes":{"symbol":"Pkg.PlatformEngines.download_verify","line":291,"module":"Pkg.PlatformEngines","file":"PlatformEngines.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["download_verify(\n    url::AbstractString,\n    hash::Union{AbstractString, Nothing},\n    dest::AbstractString;\n    verbose::Bool = false,\n    force::Bool = false,\n    quiet_download::Bool = false,\n)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Download file located at ",{"attributes":{},"tag":"code","children":["url"],"type":"node"},", verify it matches the given ",{"attributes":{},"tag":"code","children":["hash"],"type":"node"},", and throw an error if anything goes wrong.  If ",{"attributes":{},"tag":"code","children":["dest"],"type":"node"}," already exists, just verify it. If ",{"attributes":{},"tag":"code","children":["force"],"type":"node"}," is set to ",{"attributes":{},"tag":"code","children":["true"],"type":"node"},", overwrite the given file if it exists but does not match the given ",{"attributes":{},"tag":"code","children":["hash"],"type":"node"},"."],"type":"node"},{"attributes":{},"tag":"p","children":["This method returns ",{"attributes":{},"tag":"code","children":["true"],"type":"node"}," if the file was downloaded successfully, ",{"attributes":{},"tag":"code","children":["false"],"type":"node"}," if an existing file was removed due to the use of ",{"attributes":{},"tag":"code","children":["force"],"type":"node"},", and throws an error if ",{"attributes":{},"tag":"code","children":["force"],"type":"node"}," is not set and the already-existent file fails verification, or if ",{"attributes":{},"tag":"code","children":["force"],"type":"node"}," is set, verification fails, and then verification fails again after redownloading the file."],"type":"node"},{"attributes":{},"tag":"p","children":["If ",{"attributes":{},"tag":"code","children":["quiet_download"],"type":"node"}," is set to ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},", this method will print to stdout when downloading a new file.  If it is set to ",{"attributes":{},"tag":"code","children":["true"],"type":"node"}," (default, and ",{"attributes":{},"tag":"code","children":["verbose"],"type":"node"}," is set to ",{"attributes":{},"tag":"code","children":["false"],"type":"node"},") the downloading process will be completely silent.  If ",{"attributes":{},"tag":"code","children":["verbose"],"type":"node"}," is set to ",{"attributes":{},"tag":"code","children":["true"],"type":"node"},", messages about integrity verification will be printed in addition to messages regarding downloading."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}