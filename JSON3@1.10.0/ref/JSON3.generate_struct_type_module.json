{"attributes":{"kind":"function","backlinks":[{"tag":"documentation","title":"generatetypes","docid":"JSON3@1.10.0/ref/JSON3.generatetypes"}],"methods":[{"symbol_id":"JSON3.generate_struct_type_module","module_id":"JSON3","file":"gentypes.jl","line":423,"signature":"(::Signature)"}],"package_id":"JSON3@1.10.0","title":"generate_struct_type_module","symbol_id":"JSON3.generate_struct_type_module","exported":false,"module_id":"JSON3"},"tag":"documentation","children":[{"attributes":{"symbol":"JSON3.generate_struct_type_module","line":418,"module":"JSON3","file":"gentypes.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["JSON3.generate_struct_type_module(exprs, module_name)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Given a vector of ",{"attributes":{},"tag":"code","children":["exprs"],"type":"node"}," (output of ",{"attributes":{"reftype":"symbol","href":"@ref","title":"","document_id":"JSON3@1.10.0/ref/JSON3.generate_exprs"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["generate_exprs"],"type":"node"}],"type":"node"},"), return an ",{"attributes":{},"tag":"code","children":["Expr"],"type":"node"}," containing the AST for a module with name ",{"attributes":{},"tag":"code","children":["module_name"],"type":"node"},".  The module will map all types to the appropriate ",{"attributes":{},"tag":"code","children":["StructType"],"type":"node"},", so the result can immediately used with ",{"attributes":{},"tag":"code","children":["JSON3.read(json, T)"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}