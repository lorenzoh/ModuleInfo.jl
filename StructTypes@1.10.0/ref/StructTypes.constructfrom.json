{"attributes":{"kind":"function","backlinks":[],"methods":[{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":964,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":962,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":952,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1085,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1102,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1071,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":946,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1010,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1027,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1007,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":998,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1000,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1002,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1004,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":996,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1033,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":970,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":973,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":967,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":981,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1112,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":978,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":976,"signature":"(::Signature)"},{"symbol_id":"StructTypes.constructfrom","module_id":"StructTypes","file":"StructTypes.jl","line":1115,"signature":"(::Signature)"}],"package_id":"StructTypes@1.10.0","title":"constructfrom","symbol_id":"StructTypes.constructfrom","exported":false,"module_id":"StructTypes"},"tag":"documentation","children":[{"attributes":{"symbol":"StructTypes.constructfrom","line":925,"module":"StructTypes","file":"StructTypes.jl"},"tag":"docstring","children":[{"attributes":{},"tag":"md","children":[{"attributes":{"lang":""},"tag":"codeblock","children":["StructTypes.constructfrom(T, obj)\nStructTypes.constructfrom!(x::T, obj)\n"],"type":"node"},{"attributes":{},"tag":"p","children":["Construct an object of type ",{"attributes":{},"tag":"code","children":["T"],"type":"node"}," (",{"attributes":{},"tag":"code","children":["StructTypes.constructfrom"],"type":"node"},") or populate an existing object of type ",{"attributes":{},"tag":"code","children":["T"],"type":"node"}," (",{"attributes":{},"tag":"code","children":["StructTypes.constructfrom!"],"type":"node"},") from another object ",{"attributes":{},"tag":"code","children":["obj"],"type":"node"},". Utilizes and respects StructTypes.jl package properties, querying the ",{"attributes":{},"tag":"code","children":["StructType"],"type":"node"}," of ",{"attributes":{},"tag":"code","children":["T"],"type":"node"}," and respecting various serialization/deserialization names, keyword args, etc."],"type":"node"},{"attributes":{},"tag":"p","children":["Most typical use-case is construct a custom type ",{"attributes":{},"tag":"code","children":["T"],"type":"node"}," from an ",{"attributes":{},"tag":"code","children":["obj::AbstractDict"],"type":"node"},", but ",{"attributes":{},"tag":"code","children":["constructfrom"],"type":"node"}," is fully generic, so the inverse is also supported (turning any custom struct into an ",{"attributes":{},"tag":"code","children":["AbstractDict"],"type":"node"},"). For example, an external service may be providing JSON data with an evolving schema; as opposed to trying a strict \"typed parsing\" like ",{"attributes":{},"tag":"code","children":["JSON3.read(json, T)"],"type":"node"},", it may be preferrable to setup a local custom struct with just the desired properties and call ",{"attributes":{},"tag":"code","children":["StructTypes.constructfrom(T, JSON3.read(json))"],"type":"node"},". This would first do a generic parse of the JSON data into a ",{"attributes":{},"tag":"code","children":["JSON3.Object"],"type":"node"},", which is an ",{"attributes":{},"tag":"code","children":["AbstractDict"],"type":"node"},", which is then used as a \"property source\" to populate the fields of our custom type ",{"attributes":{},"tag":"code","children":["T"],"type":"node"},"."],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}